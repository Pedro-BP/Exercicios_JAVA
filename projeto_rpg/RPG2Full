package com.mycompany.projeto_rpg;

import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public class RPG2 {

    // ======= VARI√ÅVEIS GLOBAIS DO JOGO =======
    static int hp = 100, ataque = 10, ouro = 0, nivel = 1, xp = 0, xpParaSubir = 20;
    static String inventario = "Espada de Madeira";
    static Scanner scanner = new Scanner(System.in);
    static Random random = new Random();
    static String ressureicao = "";
    static ArrayList<String> item = new ArrayList<>();

    // ======= M√âTODO PRINCIPAL =======
    public static void main(String[] args) {

        pausa();

        System.out.println("==========================================");
        System.out.println("           Bem-vindo ao RPG!");
        System.out.println("==========================================");

        while (true) {
            mostrarStatus();
            System.out.print("Digite sua escolha (1/2/3/4): ");
            String escolha = scanner.nextLine();

            switch (escolha) {
                case "1" -> explorar();
                case "2" -> itens();
                case "3" -> loja();
                case "4" -> sair();
                default -> {
                    System.out.println("Op√ß√£o inv√°lida.");
                    pausa();
                }
            }
        }
    }

    static void mostrarStatus() {
        System.out.println("Seu status:");
        System.out.printf("  N√≠vel: %d\n  XP: %d / %d\n  HP: %d\n  Ataque: %d\n  Ouro: %d\n  Invent√°rio: %s\n",
                nivel, xp, xpParaSubir, hp, ataque, ouro, inventario);
        System.out.println("==========================================");
        System.out.println("Escolha sua a√ß√£o:");
        System.out.println("  1. Explorar\n  2. Itens\n  3. Loja\n  4. Sair");
        System.out.println("==========================================");
    }

    static void explorar() {
        System.out.println("Voc√™ decidiu explorar as terras perigosas...");

        int chance = random.nextInt(100);

        if (chance < 35) {
            batalha();
        } else if (chance < 55) {
            tesouro();
        } else if (chance < 70) {
            armadilha();
        } else if (chance < 85) {
            descansar();
        } else if (chance < 95) {
            entrarDungeon();
        } else {
            andarilho();
        }
    }

    static void entrarDungeon() {
        System.out.println("Voc√™ encontrou uma antiga dungeon misteriosa!");
        Dungeon dungeon = new Dungeon(nivel);
        Scanner sc = new Scanner(System.in);

        while (true) {
            dungeon.mostrar();

            if (dungeon.chegouNaSaida()) {
                System.out.println("üö™ Voc√™ encontrou uma ROTA DE FUGA!");
                System.out.println("[1] SAIR | [2] CONTINUAR EXPLORANDO");
                int resp = sc.nextInt();
                sc.nextLine();
                if (resp == 1) {
                    break;
                }
            }

            System.out.print("Mover (w/a/s/d): ");
            char comando = sc.next().charAt(0);
            dungeon.mover(comando);

            if (hp <= 0) {
                gameOver();
                break;
            }
        }
    }

    static void batalha() {
        int inimigoHp = 30 + random.nextInt(20);
        int inimigoAtaque = 5 + random.nextInt(5);

        System.out.println("‚öîÔ∏è Voc√™ encontrou um monstro!");
        while (inimigoHp > 0 && hp > 0) {
            System.out.printf("Seu HP: %d | HP do inimigo: %d\n", hp, inimigoHp);
            System.out.print("Escolha sua a√ß√£o (1.Atacar / 2.Invent√°rio / 3.Fugir): ");
            String escolha = scanner.nextLine();

            switch (escolha) {
                case "1" -> {
                    inimigoHp -= ataque;
                    if (inventario.equals("Espada vampir√≠ca")) {
                        hp += ataque / 5;
                    }
                    if (inimigoHp <= 0) {
                        vitoriaBatalha();
                        return;
                    }
                    hp -= inimigoAtaque;
                }
                case "2" -> usarItemCombate();
                case "3" -> {
                    System.out.println("Voc√™ fugiu da batalha!");
                    pausa();
                    return;
                }
                default -> System.out.println("Op√ß√£o inv√°lida!");
            }

            if (hp <= 0) {
                gameOver();
            }
        }
    }

    static void usarItemCombate() {
        if (item.isEmpty()) {
            System.out.println("Seu invent√°rio est√° vazio!");
            return;
        }

        System.out.println("=== Itens Dispon√≠veis ===");
        for (int i = 0; i < item.size(); i++) {
            System.out.println((i + 1) + ". " + item.get(i));
        }
        System.out.print("Escolha um item ou 0 para voltar: ");
        String escolha = scanner.nextLine();

        if (escolha.equals("0")) {
            return;
        }
        int idx = Integer.parseInt(escolha) - 1;

        if (idx >= 0 && idx < item.size()) {
            String usado = item.get(idx);
            if (usado.equals("Po√ß√£o")) {
                hp += 30;
                System.out.println("Voc√™ recuperou 30 de HP!");
            } else if (usado.equals("Elixir dos Deuses")) {
                hp = Math.min(200, hp * 2);
                System.out.println("Voc√™ se sente invenc√≠vel!");
            }
            item.remove(idx);
        }
    }

    static void itens() {
        if (item.isEmpty()) {
            System.out.println("Invent√°rio vazio.");
        } else {
            System.out.println("=== Itens ===");
            for (int i = 0; i < item.size(); i++) {
                System.out.println((i + 1) + ". " + item.get(i));
            }
        }
        pausa();
    }

    static void andarilho() {
        System.out.println("Welcome, stranger...");
        while (true) {
            System.out.printf("Seu ouro: %d\n", ouro);
            System.out.println("  1. Espada Vamp√≠rica (+10 ATQ e roubo de vida) - 500 Ouro");
            System.out.println("  2. Pedra Suspeita (Ressurrei√ß√£o) - 5000 Ouro");
            System.out.println("  3. Elixir dos Deuses (x2 HP) - 10000 Ouro");
            System.out.println("  4. Voltar");
            System.out.print("Escolha: ");
            String compra = scanner.nextLine();

            switch (compra) {
                case "1" -> {
                    if (ouro >= 500) {
                        ouro -= 500;
                        ataque += 10;
                        inventario = "Espada vampir√≠ca";
                        System.out.println("Voc√™ comprou a Espada Vamp√≠rica!");
                    } else {
                        System.out.println("Ouro insuficiente!");
                    }
                }
                case "2" -> {
                    if (ouro >= 5000) {
                        ouro -= 5000;
                        ressureicao = "Pedra Suspeita";
                        System.out.println("Voc√™ comprou a Pedra Suspeita!");
                    } else {
                        System.out.println("Ouro insuficiente!");
                    }
                }
                case "3" -> {
                    if (ouro >= 10000) {
                        ouro -= 10000;
                        item.add("Elixir dos Deuses");
                        System.out.println("Voc√™ comprou o Elixir dos Deuses!");
                    } else {
                        System.out.println("Ouro insuficiente!");
                    }
                }
                case "4" -> {
                    return;
                }
                default -> System.out.println("Op√ß√£o inv√°lida!");
            }
            pausa();
        }
    }

    static void vitoriaBatalha() {
        int ganho = random.nextInt(20) + 10;
        ouro += ganho;
        xp += 10;
        System.out.printf("Voc√™ venceu! +%d de ouro, +10 XP.\n", ganho);

        if (xp >= xpParaSubir) {
            nivel++;
            xp -= xpParaSubir;
            xpParaSubir += 20;
            ataque += 5;
            System.out.printf("‚ú® Subiu para o n√≠vel %d! Ataque: %d.\n", nivel, ataque);
        }
        pausa();
    }

    static void tesouro() {
        int ganho = 10 + random.nextInt(20);
        ouro += ganho;
        System.out.printf("üí∞ Voc√™ encontrou um tesouro e ganhou %d de ouro.\n", ganho);
        pausa();
    }

    static void armadilha() {
        int dano = 10 + random.nextInt(10);
        hp -= dano;
        System.out.printf("üíÄ Uma armadilha! Voc√™ perdeu %d de HP.\n", dano);
        if (hp <= 0) {
            gameOver();
        }
        pausa();
    }

    static void descansar() {
        int cura = 10 + random.nextInt(30);
        hp = Math.min(100, hp + cura);
        System.out.printf("Voc√™ descansou e recuperou %d de HP.\n", cura);
        pausa();
    }

    static void loja() {
        while (true) {
            System.out.printf("Seu ouro: %d\n", ouro);
            System.out.println("  1. Espada (+5 ATQ) - 50 Ouro");
            System.out.println("  2. Machado (+10 ATQ) - 100 Ouro");
            System.out.println("  3. Po√ß√£o (+30 HP) - 30 Ouro");
            System.out.println("  4. Voltar");
            System.out.print("Escolha: ");
            String compra = scanner.nextLine();

            switch (compra) {
                case "1" -> {
                    if (ouro >= 50) {
                        ouro -= 50;
                        ataque += 5;
                        inventario = "Espada";
                        System.out.println("Voc√™ comprou uma Espada!");
                    } else {
                        System.out.println("Ouro insuficiente!");
                    }
                }
                case "2" -> {
                    if (ouro >= 100) {
                        ouro -= 100;
                        ataque += 10;
                        inventario = "Machado";
                        System.out.println("Voc√™ comprou um Machado!");
                    } else {
                        System.out.println("Ouro insuficiente!");
                    }
                }
                case "3" -> {
                    if (ouro >= 30) {
                        ouro -= 30;
                        item.add("Po√ß√£o");
                        System.out.println("Voc√™ comprou uma Po√ß√£o!");
                    } else {
                        System.out.println("Ouro insuficiente!");
                    }
                }
                case "4" -> {
                    return;
                }
                default -> System.out.println("Op√ß√£o inv√°lida!");
            }
            pausa();
        }
    }

    static void gameOver() {
        if (ressureicao.equals("Pedra Suspeita")) {
            System.out.println("‚ö° A Pedra Suspeita brilha... Voc√™ reviveu!");
            hp = 100;
            ressureicao = "";
        } else {
            System.out.println("üíÄ GAME OVER üíÄ");
            sair();
            System.exit(0);
        }
    }

    static void sair() {
        System.out.println("==========================================");
        System.out.println("Obrigado por jogar!");
        System.out.println("==========================================");
        System.exit(0);
    }

    static void pausa() {
        System.out.println("Pressione ENTER para continuar...");
        scanner.nextLine();
        for (int i = 0; i < 30; i++) {
            System.out.println();
        }
    }

    // =====================================================
    // ======= CLASSE INTERNA DUNGEON =======
    // =====================================================
    static class Dungeon {

        private final char[][] mapa;
        private final int tamanho;
        private int jogadorX, jogadorY;
        private int saidaX, saidaY;
        private int chefeX, chefeY;
        private final boolean[][] visitado;
        private final Random random = new Random();

        private boolean chefeDerrotado = false;
        private final char[][] conteudoSala;

        public Dungeon(int nivel) {
            this.tamanho = calcularTamanho(nivel);
            this.mapa = new char[tamanho][tamanho];
            this.visitado = new boolean[tamanho][tamanho];
            this.conteudoSala = new char[tamanho][tamanho];
            gerarDungeon();
        }

        private int calcularTamanho(int nivel) {
            int indice = Math.min(nivel / 10, 9);
            return 5 + indice;
        }

        private void gerarDungeon() {
            for (int i = 0; i < tamanho; i++) {
                for (int j = 0; j < tamanho; j++) {
                    mapa[i][j] = '.';
                    conteudoSala[i][j] = gerarConteudoAleatorio();
                }
            }

            int borda = random.nextInt(4);
            switch (borda) {
                case 0 -> {
                    jogadorX = 0;
                    jogadorY = random.nextInt(tamanho);
                }
                case 1 -> {
                    jogadorX = tamanho - 1;
                    jogadorY = random.nextInt(tamanho);
                }
                case 2 -> {
                    jogadorX = random.nextInt(tamanho);
                    jogadorY = 0;
                }
                case 3 -> {
                    jogadorX = random.nextInt(tamanho);
                    jogadorY = tamanho - 1;
                }
            }

            mapa[jogadorX][jogadorY] = 'E';
            visitado[jogadorX][jogadorY] = true;
            conteudoSala[jogadorX][jogadorY] = ' ';

            do {
                saidaX = random.nextInt(tamanho);
                saidaY = random.nextInt(tamanho);
            } while (saidaX == jogadorX && saidaY == jogadorY);

            do {
                chefeX = random.nextInt(tamanho);
                chefeY = random.nextInt(tamanho);
            } while ((chefeX == jogadorX && chefeY == jogadorY) || (chefeX == saidaX && chefeY == saidaY));

            conteudoSala[chefeX][chefeY] = 'C';
            conteudoSala[saidaX][saidaY] = 'S';
        }

        private char gerarConteudoAleatorio() {
            int chance = random.nextInt(100);
            if (chance < 10) return 'T';
            if (chance < 20) return 'I';
            return ' ';
        }

        public void mover(char direcao) {
            int novoX = jogadorX, novoY = jogadorY;

            switch (direcao) {
                case 'w' -> novoX--;
                case 's' -> novoX++;
                case 'a' -> novoY--;
                case 'd' -> novoY++;
                default -> {
                    System.out.println("Comando inv√°lido!");
                    return;
                }
            }

            if (novoX < 0 || novoX >= tamanho || novoY < 0 || novoY >= tamanho) {
                System.out.println("Voc√™ n√£o pode sair da dungeon!");
                return;
            }

            jogadorX = novoX;
            jogadorY = novoY;

            if (!visitado[jogadorX][jogadorY]) {
                visitado[jogadorX][jogadorY] = true;
                ativarEventoSala();
            }
        }

        private void ativarEventoSala() {
            char evento = conteudoSala[jogadorX][jogadorY];

            switch (evento) {
                case 'T' -> {
                    System.out.println("üí∞ Voc√™ encontrou um TESOURO!");
                    int ganho = 25 + random.nextInt(75);
                    RPG2.ouro += ganho;
                    System.out.println("Voc√™ encontrou " + ganho + " de ouro!");
                }
                case 'I' -> {
                    System.out.println("‚öîÔ∏è Um inimigo aparece!");
                    RPG2.batalha();
                }
                case 'C' -> {
                    if (chefeDerrotado) {
                        System.out.println("Aqui jaz o corpo do chefe derrotado...");
                        break;
                    }
                    System.out.println("üíÄ Voc√™ entrou na sala do CHEFE!");
                    CombateBoss boss = new CombateBoss(RPG2.nivel);
                    int resultado = boss.iniciarCombate();

                    switch (resultado) {
                        case 1 -> {
                            chefeDerrotado = true;
                            conteudoSala[jogadorX][jogadorY] = ' ';
                            int recompensa = 500 + random.nextInt(500);
                            RPG2.ouro += recompensa;
                            System.out.println("üíé Voc√™ recebeu " + recompensa + " de ouro pela vit√≥ria!");
                        }
                        case 0 -> {
                            System.out.println("Voc√™ foi derrotado pelo chefe...");
                            RPG2.hp = 0;
                        }
                        case -1 -> System.out.println("Voc√™ conseguiu escapar do chefe e retorna √† dungeon!");
                    }
                }
                case 'S' -> System.out.println("üö™ Voc√™ encontrou a sa√≠da!");
                case ' ' -> System.out.println("Voc√™ entra em uma sala vazia...");
            }

            conteudoSala[jogadorX][jogadorY] = ' ';
        }

        public void mostrar() {
            System.out.println("\n‚ïî " + "‚ïê‚ïê‚ïê".repeat(tamanho) + " ‚ïó");
            for (int i = 0; i < tamanho; i++) {
                System.out.print("‚ïë");
                for (int j = 0; j < tamanho; j++) {
                    if (i == jogadorX && j == jogadorY) {
                        System.out.print(" & ");
                    } else if (!visitado[i][j]) {
                        System.out.print("   ");
                    } else if (i == saidaX && j == saidaY) {
                        System.out.print("[S]");
                    } else if (i == chefeX && j == chefeY && !chefeDerrotado) {
                        System.out.print("[C]");
                    } else {
                        System.out.print(" * ");
                    }
                }
                System.out.println("‚ïë");
            }
            System.out.println("‚ïö " + "‚ïê‚ïê‚ïê".repeat(tamanho) + " ‚ïù");
        }

        public boolean chegouNaSaida() {
            return jogadorX == saidaX && jogadorY == saidaY;
        }
    }

    // =====================================================
